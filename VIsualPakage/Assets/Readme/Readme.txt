사용방법

1.빈게임 오브젝트를 생성합니다.

2.해당 게임 오브젝트에 아래와 같은 스프라이트(3개)를 넣어줍니다.
-Visual Novel Controler
-Visual Set
-Charact Ob Controler

3.BackSprite에 있는 컴포넌트중 BackSpriteDB라는 컴포넌트에 사용될 배경이라는 헤더가 있는 오브젝트 배열에 사용될 배경 사진을 넣어준다(1920 X 1080 권장)

4.BackSprite에 있는 BackSpriteOb에 scale x scale y 를 0.925로 맞춰놓은 빈 사각형 스프라이트를 프리팹으로 만들어 넣어준다.

5.SimChar에 배열을 추가해서 캐릭터 옵션을 추가한다.
   
   ex) 
   이름
  Name:안농

6.SimChar배열 안에 내부에 이름 외에 캐릭터 스프라이트 목록에 해당 캐릭터가 쓸 기본 상태를 포함한 다양한 감정 상태를 넣어준다.

7.해당 배열에 인덱스 값이 해당 표정에 주소기 때문에 해당 표정이 몇번째 인덱스에 들어갔는지 메모 해놓는게 좋다.


8.다이얼로그 배열에서 대화 부분에 다이얼로그에 표시될 텍스트를 써준다.

9캐릭터 자료에 사용될 캐릭터(해당 캐릭터 정수는 해당 캐릭터가 SimChar에 위치해 있는 인덱스 값을 넣어주면 된다)를 넣고 감정을 넣어준다.

10.위치를 선정해준다 위치라는 곳에서 선정 할 수 있으며 기본값은 0~2까지 점수가 높아질 수록 오른쪽으로 이동 만약 이동 할 수 있는 위치값을 추가해주고 싶다면 CharacterSetManager에 SetPos 인덱스를 추가해서 새로운 위치값을 주면 된다.

11.말을 하는 유저에서 네임에 들어갈 캐릭터를 적어줄 수 있다(추후 플레이어일 경우도 추가 해줄 예정이다.) 해당 부분은 사용하는 캐릭터를 주는 화면에 인덱스 값을 넣어주면 된다.

12.사용할 배경에 인덱스 값을 백그라운드 DB에서 참고해서 넣어주면 된다.

13.그렇게 특정 비주얼노벨 차트가 완성되면 DialFlow 스크립트에 [serializefield] 로 VisualNovelControl 변수 하나를 선언 해준 뒤 외부에서 해당 오브젝트를 넣어준다.
14.코루틴으로 yield return new WaitUntil(() => vi.UpdateDialogue()); 즉 yield return new WaitUntil(()=>자신이 만든 비노벨 오브젝트 변수 이름.UpdateDialogue())Until과 람다식을 통해서 UpdateDialogue를 선언 해준다
Until은 true가 나오면 반환되는 코드이다.

앞으로 추가되는 스크립트나 기능에 대한 설명은 이곳에 넣어주세요



추후 개발 방향성

처음에 enum 값으로 이벤트 CG 나 시네마틱 CG를 선택함에 따라서 해당 데이터값이 다르게 적용 될 수 있게 수정할 예정

EventCG추가 에정

시네마틱 CG 추가 예정

더빙 추가 예정

AudioManager를 비주얼노벨 플로우에서 조절할 수 있게 수정 할 예정

선택지 추가 예정

세이브 패키지 해당 비주얼노벨에 맞게 수정 예정